{"version":3,"sources":["../webpack/bootstrap","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","simulation/Grid3D.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","simulation/Randomiser3D.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","simulation/Neighbours3D.js","simulation/Rule3D.js","simulation/worker.js","simulation/Engine.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_arrayLikeToArray","arr","len","length","arr2","Array","_unsupportedIterableToArray","minLen","toString","slice","constructor","from","test","_createForOfIteratorHelper","iterator","isArray","F","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","configurable","writable","_createClass","protoProps","staticProps","Grid3D","sk","this","shape","count","XY","X","cells","cells_buffer","neighbours","updates","updates_buffer","render_updates","transferables","Uint8Array","Set","buffer","fill","clear","x","y","z","Math","floor","xyz","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","_typeof","obj","_possibleConstructorReturn","self","ReferenceError","_createSuper","Derived","result","Super","NewTarget","arguments","apply","_setPrototypeOf","_inherits","subClass","superClass","Randomiser","params","type","SeedCrystal","SeedCrystalAbsolute","Error","grid","rule","radius","density","max","min","lower","upper","Y","Z","ceil","xlower","xupper","ylower","yupper","zlower","zupper","xyz_to_i","alive_state","random","add","_slicedToArray","_arr","_n","_d","undefined","_s","_i","push","NeighbourBase","max_neighbours","MooreNeighbour","val","xoff","yoff","zoff","xn","pos_mod","yn","zn","VonNeumanNeighbour","offsets","dim","off","Moore","VN","Neighbour","neighbour","Rule3D","remain_alive","become_alive","total_states","dead_state","delta","alive_threshold","dead_threshold","remain","become","Create","listener","completed_blocks","remove_stack","sub_stack","add_stack","refactory_stack","complete","total","ncount","state","next_state","get_next_state","is_alive","is_dead","delete","i_to_xyz","sub","engine","listeners","total_steps","running","requested_step","completed_frame","grid_available","local_rerender","tasks","callback","queued","randomise","set_shape","data","local","loop","task","calculate_frame","setTimeout","notify","total_blocks","frame_time","randomiser","size","start_dt","performance","now","update","attach_listener","postMessage","action","run","onmessage","ev","msg","id","set_rule","set_randomiser","start","stop","res","get_frame","send_grid","set_grid","ex","error"],"mappings":"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","file":"66acda58adfb3d8ba9a4.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/3D-Cellular-Automata/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export class Grid3D {\r\n    static Create(shape) {\r\n        let sk = {}\r\n        sk.shape = shape;\r\n        sk.count = shape[0] * shape[1] * shape[2];\r\n\r\n        sk.XY = shape[0]*shape[1];\r\n        sk.X = shape[0];\r\n\r\n        sk.cells = new Uint8Array(sk.count);\r\n        sk.neighbours = new Uint8Array(sk.count);\r\n        sk.updates = new Set();\r\n        sk.render_updates = new Set();\r\n        // sk.updates = new Uint8Array(sk.count);\r\n        // sk.updates_buffer = new Uint8Array(sk.count);\r\n\r\n        sk.transferables = [\r\n            sk.cells.buffer,\r\n            sk.neighbours.buffer,\r\n            // sk.updates.buffer,\r\n            // sk.updates_buffer.buffer,\r\n        ];\r\n\r\n        return new Grid3D(sk);\r\n    }\r\n\r\n    constructor(sk) {\r\n        this.shape = sk.shape;\r\n        this.count = sk.count;\r\n\r\n        this.XY = sk.XY;\r\n        this.X = sk.X;\r\n\r\n        this.cells = sk.cells\r\n        this.cells_buffer = sk.cells_buffer;\r\n        this.neighbours = sk.neighbours;\r\n        this.updates = sk.updates;\r\n        this.updates_buffer = sk.updates_buffer;\r\n        this.render_updates = sk.render_updates;\r\n\r\n        this.transferables = sk.transferables;\r\n    }\r\n\r\n    clear() {\r\n        this.cells.fill(0, 0, this.count);\r\n        this.neighbours.fill(0, 0, this.count);\r\n        this.updates.clear();\r\n        this.render_updates.clear();\r\n    }\r\n\r\n    xyz_to_i(x, y, z) {\r\n        return x + y*this.X + z*this.XY;\r\n    }\r\n\r\n    i_to_xyz(i) {\r\n        let z = Math.floor(i/this.XY);\r\n        i = i-z*this.XY;\r\n        let y = Math.floor(i/this.X);\r\n        let x = i-y*this.X;\r\n        return [x, y, z];\r\n    }\r\n\r\n    i_to_xyz_inplace(i, xyz) {\r\n        let z = Math.floor(i/this.XY);\r\n        i = i-z*this.XY;\r\n        let y = Math.floor(i/this.X);\r\n        let x = i-y*this.X;\r\n\r\n        xyz[0] = x;\r\n        xyz[1] = y;\r\n        xyz[2] = z;\r\n    }\r\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  return function () {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export class Randomiser {\r\n    constructor(params={}) {\r\n        this.params = params;\r\n    }\r\n\r\n    static Create(type, params) {\r\n        switch (type) {\r\n            case 'Seed Crystal':\r\n                return new SeedCrystal(params);\r\n            case 'Seed Crystal Absolute':\r\n                return new SeedCrystalAbsolute(params);\r\n            default:\r\n                throw new Error(`Invalid randomiser type: ${type}`);\r\n        }\r\n    }\r\n}\r\n\r\nclass SeedCrystal extends Randomiser {\r\n    randomise(grid, rule) {\r\n        let {radius, density} = this.params;\r\n\r\n        let [lower, upper] = [\r\n            Math.max(0.5-radius, 0.0),  \r\n            Math.min(0.5+radius, 1.0)];\r\n\r\n        let X = grid.shape[0]-1;\r\n        let Y = grid.shape[1]-1;\r\n        let Z = grid.shape[2]-1;\r\n\r\n        let [xlower, xupper] = [Math.floor(X*lower), Math.ceil(X*upper)];\r\n        let [ylower, yupper] = [Math.floor(Y*lower), Math.ceil(Y*upper)];\r\n        let [zlower, zupper] = [Math.floor(Z*lower), Math.ceil(Z*upper)];\r\n\r\n\r\n        for (let x = xlower; x <= xupper; x++) {\r\n            for (let y = ylower; y <= yupper; y++) {\r\n                for (let z = zlower; z <= zupper; z++) {\r\n                    let i = grid.xyz_to_i(x, y, z);\r\n                    let state = grid.cells[i];\r\n                    if (state === rule.alive_state) {\r\n                        continue;\r\n                    }\r\n                    if (Math.random() < density) {\r\n                        grid.cells[i] = rule.alive_state;\r\n                        rule.add(x, y, z, grid);\r\n                    } else {\r\n                        // grid.cells[i] = this.dead_state;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass SeedCrystalAbsolute extends Randomiser {\r\n    randomise(grid, rule) {\r\n        let {radius, density} = this.params;\r\n\r\n        let X = Math.floor(grid.shape[0]/2);\r\n        let Y = Math.floor(grid.shape[1]/2);\r\n        let Z = Math.floor(grid.shape[2]/2);\r\n\r\n        let [xlower, xupper] = [Math.max(X-radius, 0), Math.min(X+radius, grid.shape[0]-1)];\r\n        let [ylower, yupper] = [Math.max(Y-radius, 0), Math.min(Y+radius, grid.shape[1]-1)];\r\n        let [zlower, zupper] = [Math.max(Z-radius, 0), Math.min(Z+radius, grid.shape[2]-1)];\r\n\r\n        for (let x = xlower; x <= xupper; x++) {\r\n            for (let y = ylower; y <= yupper; y++) {\r\n                for (let z = zlower; z <= zupper; z++) {\r\n                    let i = grid.xyz_to_i(x, y, z);\r\n                    let state = grid.cells[i];\r\n                    if (state === rule.alive_state) {\r\n                        continue;\r\n                    }\r\n                    if (Math.random() < density) {\r\n                        grid.cells[i] = rule.alive_state;\r\n                        rule.add(x, y, z, grid)\r\n                    } else {\r\n                        // sim.cells[i] = this.dead_state;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\r\n * Add or subtract neighbours from a grid\r\n * If a cell becomes alive, then surrounding cells gain a neighbour\r\n * If a cell dies or starts refracting, then surround cells lose a neighbour\r\n */\r\nclass NeighbourBase {\r\n    constructor(max_neighbours) {\r\n        this.max_neighbours = max_neighbours;\r\n    }\r\n\r\n    sub(x, y, z, grid) {\r\n\r\n    }\r\n\r\n    add(x, y, z, grid) {\r\n\r\n    }\r\n}\r\n\r\nclass MooreNeighbour extends NeighbourBase {\r\n    constructor() {\r\n        super(26);\r\n    }\r\n\r\n    sub(x, y, z, grid) {\r\n        this.add(x, y, z, grid, -1);\r\n    }\r\n\r\n    add(x, y, z, grid, val=1) {\r\n        let neighbours = grid.neighbours;\r\n        let updates = grid.updates;\r\n        let render_updates = grid.render_updates;\r\n\r\n        let i = grid.xyz_to_i(x, y, z);\r\n        updates.add(i);\r\n        render_updates.add(i);\r\n\r\n        for (let xoff = -1; xoff <= 1; xoff++) {\r\n            for (let yoff = -1; yoff <= 1; yoff++) {\r\n                for (let zoff = -1; zoff <= 1; zoff++) {\r\n                    if (xoff === 0 && yoff === 0 && zoff === 0)\r\n                        continue;\r\n\r\n                    const xn = pos_mod(x+xoff, grid.shape[0]);\r\n                    const yn = pos_mod(y+yoff, grid.shape[1]);\r\n                    const zn = pos_mod(z+zoff, grid.shape[2]); \r\n\r\n                    i = grid.xyz_to_i(xn, yn, zn);\r\n                    neighbours[i] += val;\r\n                    updates.add(i);\r\n                    render_updates.add(i);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nclass VonNeumanNeighbour extends NeighbourBase {\r\n    constructor() {\r\n        super(6);\r\n        this.offsets = [];\r\n        for (let dim = 0; dim < 3; dim++) {\r\n            let n = [0, 0, 0];\r\n            let m = [0, 0, 0];\r\n            n[dim] = 1;\r\n            m[dim] = -1;\r\n            this.offsets.push(n);\r\n            this.offsets.push(m); \r\n        }\r\n    }\r\n\r\n    sub(x, y, z, grid) {\r\n        this.add(x, y, z, grid, -1);\r\n    }\r\n\r\n    add(x, y, z, grid, val=1) {\r\n        let neighbours = grid.neighbours;\r\n        let updates = grid.updates;\r\n        let render_updates = grid.render_updates;\r\n\r\n        let i = grid.xyz_to_i(x, y, z);\r\n        updates.add(i);\r\n        render_updates.add(i);\r\n\r\n        for (let off of this.offsets) {\r\n            const xn = pos_mod(x+off[0], grid.shape[0]);\r\n            const yn = pos_mod(y+off[1], grid.shape[1]);\r\n            const zn = pos_mod(z+off[2], grid.shape[2]); \r\n\r\n            i = grid.xyz_to_i(xn, yn, zn);\r\n            neighbours[i] += val;\r\n            updates.add(i);\r\n            render_updates.add(i);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction pos_mod(n, m) {\r\n    return (((n % m) + m) % m);\r\n}\r\n\r\nconst Moore = new MooreNeighbour();\r\nconst VN = new VonNeumanNeighbour();\r\n\r\nexport class Neighbour {\r\n    static Create(neighbour) {\r\n        let type = neighbour.type;\r\n        switch (type) {\r\n            case 'M':\r\n                return Moore;\r\n            case 'VN':\r\n                return VN;\r\n            default:\r\n                throw new Error(`Unknown neighbour type: ${type}`);\r\n        }\r\n    }\r\n}\r\n","import { Neighbour } from './Neighbours3D';\r\n\r\nexport class Rule3D {\r\n    static Create(remain, become, total_states, neighbour) {\r\n        neighbour = Neighbour.Create(neighbour);\r\n        return new Rule3D(remain, become, total_states, neighbour);\r\n    }\r\n\r\n    constructor(remain_alive, become_alive, total_states, neighbours) {\r\n        this.remain_alive = remain_alive;\r\n        this.become_alive = become_alive;\r\n        this.total_states = total_states;\r\n\r\n        this.alive_state = 255;\r\n        this.dead_state = 0;\r\n\r\n        this.neighbours = neighbours;\r\n\r\n        let delta = (this.alive_state-this.dead_state)/(this.total_states-1);\r\n        delta = Math.floor(delta);\r\n\r\n        this.alive_threshold = Math.floor(this.alive_state-delta);\r\n        this.dead_threshold = Math.floor(delta);\r\n        this.delta = delta;\r\n    }\r\n\r\n    update(grid, listener) {\r\n        let {cells, neighbours, updates, render_updates} = grid;\r\n\r\n        let completed_blocks = 0;\r\n        let remove_stack = [];\r\n        let sub_stack = [];\r\n        let add_stack = [];\r\n        let refactory_stack = [];\r\n\r\n        function complete(total) {\r\n            completed_blocks += total;\r\n            listener(completed_blocks);\r\n        }\r\n\r\n        for (let i of updates) {\r\n            let ncount = neighbours[i];\r\n            let state = cells[i];\r\n            let next_state = this.get_next_state(state, ncount); \r\n            cells[i] = next_state;\r\n\r\n            // cell is still fresh, we want to update it next tick\r\n            // we only update when neighbours change, and this only occurs when\r\n            // dead to alive, or alive to refactory/dead\r\n            // refractory cells do not affect neighbour count, but still require updating \r\n            // an update has occured, therefore we update the neighbour and updates set\r\n\r\n            // alive to refactory/dead\r\n            if (this.is_alive(state) && !this.is_alive(next_state)) {\r\n                sub_stack.push(i);\r\n            // dead to alive\r\n            } else if (this.is_dead(state) && this.is_alive(next_state)) {\r\n                add_stack.push(i);\r\n            // refactory\r\n            } else if (state !== next_state) {\r\n                refactory_stack.push(i);\r\n            // cell is stale, remove from update list\r\n            } else {\r\n                remove_stack.push(i);\r\n            }\r\n        }\r\n\r\n        for (let i of remove_stack) {\r\n            updates.delete(i);\r\n        }\r\n        complete(remove_stack.length);\r\n\r\n        for (let i of refactory_stack) {\r\n            // updates.add(i);\r\n            render_updates.add(i);\r\n        }\r\n        complete(refactory_stack.length);\r\n\r\n        for (let i of add_stack) {\r\n            let [x, y, z] = grid.i_to_xyz(i);\r\n            this.add(x, y, z, grid);\r\n        }\r\n        complete(add_stack.length);\r\n\r\n        for (let i of sub_stack) {\r\n            let [x, y, z] = grid.i_to_xyz(i);\r\n            this.sub(x, y, z, grid);\r\n        }\r\n        complete(sub_stack.length);\r\n    }\r\n\r\n    get_next_state(state, neighbours) {\r\n        // alive to dead\r\n        if (this.is_alive(state)) {\r\n            if (!this.remain_alive[neighbours]) {\r\n                let next = state-this.delta;\r\n                return this.is_dead(next) ? 0 : next;\r\n            } else {\r\n                return this.alive_state;\r\n            }\r\n        }\r\n        // dead to alive\r\n        if (this.is_dead(state)) {\r\n            if (this.become_alive[neighbours]) {\r\n                return this.alive_state;\r\n            } else {\r\n                // if we changed rules, then state may not always be 0\r\n                return this.dead_state;\r\n            }\r\n        }\r\n        // refractory\r\n        let next = state-this.delta;\r\n        return this.is_dead(next) ? 0 : next;\r\n    }\r\n\r\n    add(x, y, z, grid) {\r\n        this.neighbours.add(x, y, z, grid);\r\n    }\r\n\r\n    sub(x, y, z, grid) {\r\n        this.neighbours.sub(x, y, z, grid);\r\n    }\r\n\r\n    is_alive(state) {\r\n        return (state > this.alive_threshold);\r\n    }\r\n\r\n    is_dead(state) {\r\n        return (state < this.dead_threshold);\r\n    }\r\n}","import { Engine } from \"./Engine\";\r\n\r\nconst engine = new Engine();\r\nengine.attach_listener((data) => {\r\n    postMessage({action:'stats', data});\r\n});\r\nengine.run();\r\n\r\nonmessage = (ev) => {\r\n    let msg = ev.data;\r\n    let action = msg.action;\r\n    let id = msg.id;\r\n    try {\r\n        switch (action) {\r\n            case 'set_size':        return engine.set_shape(msg.data);\r\n            case 'set_rule':        return engine.set_rule(msg.data); \r\n            case 'set_randomiser':  return engine.set_randomiser(msg.data); \r\n            case 'clear':           return engine.clear(); \r\n            case 'randomise':       return engine.randomise(); \r\n            case 'step':            return engine.step(); \r\n            case 'start':           return engine.start(); \r\n            case 'stop':            return engine.stop(); \r\n            case 'request_frame':   return send_grid();\r\n            case 'set_grid':        return engine.set_grid(msg.data);\r\n            default:\r\n                break;\r\n        }\r\n    } catch (ex) {\r\n        postMessage({error: ex, action, id});\r\n    }\r\n}\r\n\r\nfunction send_grid() {\r\n    let res = engine.get_frame();\r\n    if (!res) return;\r\n    let {grid, local} = res;\r\n    postMessage({action:'grid', grid, local}, grid.transferables);\r\n}\r\n\r\n","import { Grid3D } from './Grid3D';\r\nimport { Randomiser } from './Randomiser3D';\r\nimport { Rule3D } from './Rule3D';\r\n\r\n/**\r\n * Web worker state machine\r\n * Mutates the grid based on cellular automata rules.\r\n * Since web workers cannot share data between threads anymore (due to spectre) \r\n * the grid is transferred between threads.\r\n * This means grid must be returned to web worker after updating 3d textures, etc.\r\n */\r\nexport class Engine {\r\n    constructor() {\r\n        this.listeners = new Set();\r\n        this.total_steps = 0;\r\n        this.running = false;\r\n        this.requested_step = false;\r\n\r\n        this.completed_frame = false;\r\n        this.grid_available = true;\r\n        this.local_rerender = false;\r\n\r\n        this.tasks = {\r\n            clear:     {callback: () => this.clear(), queued: false},\r\n            randomise: {callback: () => this.randomise(), queued: false},\r\n            set_shape: {callback: () => {}, queued: false},\r\n        }\r\n    }\r\n\r\n    // observe when the grid has been mutated\r\n    attach_listener(listener) {\r\n        return this.listeners.add(listener);\r\n    }\r\n\r\n    remove_listener(listener) {\r\n        return this.listeners.delete(listener);\r\n    }\r\n\r\n    notify(data) {\r\n        for (let listener of this.listeners) {\r\n            listener(data);\r\n        }\r\n    }\r\n\r\n    get_frame() {\r\n        if (!this.grid) {\r\n            return undefined;\r\n        }\r\n        if (!this.completed_frame) {\r\n            return undefined;\r\n        }\r\n\r\n        this.completed_frame = false;\r\n        this.grid_available = false;\r\n\r\n        let local = this.local_rerender;\r\n        this.local_rerender = true;\r\n\r\n        return {grid:this.grid, local};\r\n    }\r\n\r\n    start() {\r\n        this.running = true;\r\n    }\r\n\r\n    stop() {\r\n        this.running = false;\r\n    }\r\n\r\n    run() {\r\n        this.loop();\r\n    }\r\n\r\n    loop() {\r\n        const dt = 15;\r\n\r\n        for (let key in this.tasks) {\r\n            let task = this.tasks[key];\r\n            if (task.queued) task.callback();\r\n        }\r\n\r\n        if (this.grid_available && (this.running || this.requested_step)) {\r\n            this.calculate_frame();\r\n            this.requested_step = false;\r\n        }\r\n\r\n        setTimeout(() => this.loop(), dt);\r\n    }\r\n\r\n    step() {\r\n        this.requested_step = true;\r\n    }\r\n\r\n    set_shape(shape) {\r\n        // if grid is still being used, then queue it\r\n        if (this.grid && !this.grid_available) {\r\n            this.tasks.set_shape.queued = true;\r\n            this.tasks.set_shape.callback = () => this.set_shape(shape);\r\n            return;\r\n        }\r\n        this.tasks.set_shape.queued = false;\r\n        this.tasks.set_shape.callback = () => {};\r\n\r\n        this.grid = Grid3D.Create(shape);\r\n        this.total_steps = 0;\r\n        this.notify({total_steps: this.total_steps, total_blocks: 0, completed_blocks: 0, frame_time: 0});\r\n        this.completed_frame = true;\r\n        this.local_rerender = false;\r\n    }\r\n\r\n    set_grid(grid) {\r\n        this.grid = new Grid3D(grid);\r\n        this.grid_available = true;\r\n    }\r\n\r\n    set_rule(data) {\r\n        let {remain, become, total_states, neighbour} = data;\r\n        this.rule = Rule3D.Create(remain, become, total_states, neighbour);\r\n    }\r\n\r\n    set_randomiser(data) {\r\n        let {type, params} = data;\r\n        this.randomiser = Randomiser.Create(type, params);\r\n    }\r\n\r\n    clear() {\r\n        if (!this.grid || !this.grid_available) {\r\n            this.tasks.clear.queued = true;\r\n            return;\r\n        }\r\n        this.tasks.clear.queued = false;\r\n\r\n        this.grid.clear();\r\n        this.total_steps = 0;\r\n        this.notify({total_steps: this.total_steps, total_blocks: 0, completed_blocks: 0, frame_time: 0});\r\n        this.completed_frame = true;\r\n        this.local_rerender = false;\r\n    }\r\n\r\n    randomise() {\r\n        if (!this.randomiser) return;\r\n        if (!this.rule) return;\r\n        if (!this.grid || !this.grid_available) {\r\n            this.tasks.randomise.queued = true;\r\n            return;\r\n        };\r\n        this.tasks.randomise.queued = false;\r\n\r\n        this.randomiser.randomise(this.grid, this.rule);\r\n        let total_blocks = this.grid.updates.size;\r\n\r\n        this.notify({total_blocks, completed_blocks:0});\r\n        this.completed_frame = true;\r\n        this.local_rerender = this.local_rerender && true;\r\n    }\r\n\r\n    /**\r\n     * To decrease computation of each tick for cellular automata, we only consider the\r\n     * fresh cells in the grid, which actually change.\r\n     * We consider fresh cells as those which changed state in this tick.\r\n     * Cells which are in the neighbourhood (VonNeumann or Moore) are also considered to be fresh.\r\n     * A cell has become stale (i.e. not considered for update next tick) \r\n     * if their new state is the same as their old state.\r\n     * The stale and fresh cells are tracked within a set.\r\n     */\r\n    calculate_frame() {\r\n        let grid = this.grid;\r\n        let rule = this.rule;\r\n        if (!grid) return;\r\n        if (!rule) return;\r\n\r\n        this.grid_available = false;\r\n\r\n        let total_blocks = grid.updates.size;\r\n        this.notify({completed_blocks: 0, total_blocks});\r\n\r\n        let start_dt = performance.now();\r\n\r\n        rule.update(grid, completed_blocks => {\r\n            this.notify({completed_blocks});\r\n        });\r\n\r\n        this.total_steps += 1;\r\n        let end_dt = performance.now();\r\n        let frame_time = end_dt - start_dt;\r\n        this.notify({\r\n            total_steps: this.total_steps, \r\n            completed_blocks: total_blocks,\r\n            frame_time, total_blocks});\r\n\r\n        this.completed_frame = true;\r\n        this.grid_available = true;\r\n        this.local_rerender = this.local_rerender && true;\r\n    }\r\n};"],"sourceRoot":""}