{"version":3,"sources":["../webpack/bootstrap","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","simulation/Grid3D.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","simulation/Randomiser3D.js","simulation/Neighbours3D.js","simulation/Rule3D.js","simulation/worker.js","simulation/Engine.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_arrayLikeToArray","arr","len","length","arr2","Array","_unsupportedIterableToArray","minLen","toString","slice","constructor","from","test","_slicedToArray","isArray","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","TypeError","_createForOfIteratorHelper","F","e","f","it","normalCompletion","didErr","step","_e2","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","configurable","writable","_createClass","protoProps","staticProps","Grid3D","sk","this","shape","count","XY","X","cells","cells_buffer","neighbours","updates","updates_buffer","render_updates","transferables","Uint8Array","Set","buffer","tmp","x","y","z","Math","floor","xyz","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","_typeof","obj","_possibleConstructorReturn","self","ReferenceError","_createSuper","Derived","result","Super","NewTarget","arguments","apply","_setPrototypeOf","_inherits","subClass","superClass","Randomiser","params","alive_state","dead_state","type","SeedCrystal","SeedCrystalAbsolute","Error","grid","rule","radius","density","max","min","lower","upper","Y","Z","ceil","xlower","xupper","ylower","yupper","zlower","zupper","xyz_to_i","random","on_location_update","MooreNeighbour","max_neighbours","total_neighbours","xoff","yoff","zoff","xn","pos_mod","yn","zn","state","is_neighbour","add","VonNeumanNeighbour","offsets","dim","off","Moore","VN","Neighbour","neighbour","Rule3D","remain_alive","become_alive","total_states","delta","alive_threshold","dead_threshold","remain","become","Create","count_neighbours","is_alive","is_dead","engine","listeners","total_steps","running","requested_step","completed_frame","grid_available","local_rerender","tasks","clear","callback","queued","randomise","listener","delete","data","local","loop","task","calculate_frame","setTimeout","notify","total_blocks","completed_blocks","frame_time","randomiser","fill","size","remove_stack","start_dt","performance","now","i_to_xyz","ncount","next_state","get_next_state","swap_buffers","attach_listener","postMessage","action","run","onmessage","ev","msg","id","set_shape","set_rule","set_randomiser","start","stop","res","get_frame","send_grid","set_grid","ex","error"],"mappings":"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","file":"c6e30ad16229c283ffae.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/3D-Cellular-Automata/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export class Grid3D {\r\n    static Create(shape) {\r\n        let sk = {}\r\n        sk.shape = shape;\r\n        sk.count = shape[0] * shape[1] * shape[2];\r\n\r\n        sk.XY = shape[0]*shape[1];\r\n        sk.X = shape[0];\r\n\r\n        sk.cells = new Uint8Array(sk.count);\r\n        sk.cells_buffer = new Uint8Array(sk.count);\r\n        sk.neighbours = new Uint8Array(sk.count);\r\n        sk.updates = new Set();\r\n        sk.updates_buffer = new Set();\r\n        sk.render_updates = new Set();\r\n        // sk.updates = new Uint8Array(sk.count);\r\n        // sk.updates_buffer = new Uint8Array(sk.count);\r\n\r\n        sk.transferables = [\r\n            sk.cells.buffer,\r\n            sk.cells_buffer.buffer,\r\n            sk.neighbours.buffer,\r\n            // sk.updates.buffer,\r\n            // sk.updates_buffer.buffer,\r\n        ];\r\n\r\n        return new Grid3D(sk);\r\n    }\r\n\r\n    constructor(sk) {\r\n        this.shape = sk.shape;\r\n        this.count = sk.count;\r\n\r\n        this.XY = sk.XY;\r\n        this.X = sk.X;\r\n\r\n        this.cells = sk.cells\r\n        this.cells_buffer = sk.cells_buffer;\r\n        this.neighbours = sk.neighbours;\r\n        this.updates = sk.updates;\r\n        this.updates_buffer = sk.updates_buffer;\r\n        this.render_updates = sk.render_updates;\r\n\r\n        this.transferables = sk.transferables;\r\n    }\r\n\r\n    swap_buffers() {\r\n        let tmp = this.cells;\r\n        this.cells = this.cells_buffer;\r\n        this.cells_buffer = tmp;\r\n\r\n        tmp = this.updates;\r\n        this.updates = this.updates_buffer;\r\n        this.updates_buffer = tmp;\r\n    }\r\n\r\n    xyz_to_i(x, y, z) {\r\n        return x + y*this.X + z*this.XY;\r\n    }\r\n\r\n    i_to_xyz(i) {\r\n        let z = Math.floor(i/this.XY);\r\n        i = i-z*this.XY;\r\n        let y = Math.floor(i/this.X);\r\n        let x = i-y*this.X;\r\n        return [x, y, z];\r\n    }\r\n\r\n    i_to_xyz_inplace(i, xyz) {\r\n        let z = Math.floor(i/this.XY);\r\n        i = i-z*this.XY;\r\n        let y = Math.floor(i/this.X);\r\n        let x = i-y*this.X;\r\n\r\n        xyz[0] = x;\r\n        xyz[1] = y;\r\n        xyz[2] = z;\r\n    }\r\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  return function () {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export class Randomiser {\r\n    constructor(params={}) {\r\n        this.params = params;\r\n        this.alive_state = 255;\r\n        this.dead_state = 0;\r\n    }\r\n\r\n    static Create(type, params) {\r\n        switch (type) {\r\n            case 'Seed Crystal':\r\n                return new SeedCrystal(params);\r\n            case 'Seed Crystal Absolute':\r\n                return new SeedCrystalAbsolute(params);\r\n            default:\r\n                throw new Error(`Invalid randomiser type: ${type}`);\r\n        }\r\n    }\r\n}\r\n\r\nclass SeedCrystal extends Randomiser {\r\n    randomise(grid, rule) {\r\n        let {radius, density} = this.params;\r\n\r\n        let [lower, upper] = [\r\n            Math.max(0.5-radius, 0.0),  \r\n            Math.min(0.5+radius, 1.0)];\r\n\r\n        let X = grid.shape[0]-1;\r\n        let Y = grid.shape[1]-1;\r\n        let Z = grid.shape[2]-1;\r\n\r\n        let [xlower, xupper] = [Math.floor(X*lower), Math.ceil(X*upper)];\r\n        let [ylower, yupper] = [Math.floor(Y*lower), Math.ceil(Y*upper)];\r\n        let [zlower, zupper] = [Math.floor(Z*lower), Math.ceil(Z*upper)];\r\n\r\n\r\n        for (let x = xlower; x <= xupper; x++) {\r\n            for (let y = ylower; y <= yupper; y++) {\r\n                for (let z = zlower; z <= zupper; z++) {\r\n                    let i = grid.xyz_to_i(x, y, z);\r\n                    if (Math.random() < density) {\r\n                        grid.cells[i] = this.alive_state;\r\n                        rule.on_location_update(x, y, z, grid, grid.updates);\r\n                    } else {\r\n                        // grid.cells[i] = this.dead_state;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass SeedCrystalAbsolute extends Randomiser {\r\n    randomise(grid, rule) {\r\n        let {radius, density} = this.params;\r\n\r\n        let X = Math.floor(grid.shape[0]/2);\r\n        let Y = Math.floor(grid.shape[1]/2);\r\n        let Z = Math.floor(grid.shape[2]/2);\r\n\r\n        let [xlower, xupper] = [Math.max(X-radius, 0), Math.min(X+radius, grid.shape[0]-1)];\r\n        let [ylower, yupper] = [Math.max(Y-radius, 0), Math.min(Y+radius, grid.shape[1]-1)];\r\n        let [zlower, zupper] = [Math.max(Z-radius, 0), Math.min(Z+radius, grid.shape[2]-1)];\r\n\r\n        for (let x = xlower; x <= xupper; x++) {\r\n            for (let y = ylower; y <= yupper; y++) {\r\n                for (let z = zlower; z <= zupper; z++) {\r\n                    let i = grid.xyz_to_i(x, y, z);\r\n                    if (Math.random() < density) {\r\n                        grid.cells[i] = this.alive_state;\r\n                        rule.on_location_update(x, y, z, grid, grid.updates)\r\n                    } else {\r\n                        // sim.cells[i] = this.dead_state;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","class MooreNeighbour {\r\n    constructor() {\r\n        this.max_neighbours = 26;\r\n    }\r\n\r\n    count_neighbours(x, y, z, grid, rule) {\r\n        let total_neighbours = 0;\r\n\r\n        for (let xoff = -1; xoff <= 1; xoff++) {\r\n            for (let yoff = -1; yoff <= 1; yoff++) {\r\n                for (let zoff = -1; zoff <= 1; zoff++) {\r\n                    if (xoff === 0 && yoff === 0 && zoff === 0)\r\n                        continue;\r\n\r\n                    const xn = pos_mod(x+xoff, grid.shape[0]);\r\n                    const yn = pos_mod(y+yoff, grid.shape[1]);\r\n                    const zn = pos_mod(z+zoff, grid.shape[2]); \r\n\r\n                    const i = grid.xyz_to_i(xn, yn, zn);\r\n                    const state = grid.cells[i]; \r\n                    if (rule.is_neighbour(state)) \r\n                        total_neighbours += 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        return total_neighbours;\r\n\r\n    }\r\n\r\n    on_location_update(x, y, z, grid, updates) {\r\n        let render_updates = grid.render_updates;\r\n        for (let xoff = -1; xoff <= 1; xoff++) {\r\n            for (let yoff = -1; yoff <= 1; yoff++) {\r\n                for (let zoff = -1; zoff <= 1; zoff++) {\r\n                    const xn = pos_mod(x+xoff, grid.shape[0]);\r\n                    const yn = pos_mod(y+yoff, grid.shape[1]);\r\n                    const zn = pos_mod(z+zoff, grid.shape[2]); \r\n\r\n                    const i = grid.xyz_to_i(xn, yn, zn);\r\n                    updates.add(i);\r\n                    render_updates.add(i);\r\n                    // updates[i] = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass VonNeumanNeighbour {\r\n    constructor() {\r\n        this.offsets = [];\r\n        for (let dim = 0; dim < 3; dim++) {\r\n            let n = [0, 0, 0];\r\n            let m = [0, 0, 0];\r\n            n[dim] = 1;\r\n            m[dim] = -1;\r\n            this.offsets.push(n);\r\n            this.offsets.push(m); \r\n        }\r\n        this.max_neighbours = 6;\r\n    }\r\n\r\n    count_neighbours(x, y, z, grid, rule) {\r\n        let total_neighbours = 0;\r\n\r\n        for (let off of this.offsets) {\r\n            const xn = pos_mod(x+off[0], grid.shape[0]);\r\n            const yn = pos_mod(y+off[1], grid.shape[1]);\r\n            const zn = pos_mod(z+off[2], grid.shape[2]); \r\n\r\n            const i = grid.xyz_to_i(xn, yn, zn);\r\n\r\n            const state = grid.cells[i]; \r\n            if (rule.is_neighbour(state)) \r\n                total_neighbours += 1;\r\n        }\r\n\r\n        return total_neighbours;\r\n    }\r\n\r\n    on_location_update(x, y, z, grid, updates) {\r\n        let i = grid.xyz_to_i(x, y, z);\r\n        let render_updates = grid.render_updates;\r\n        updates.add(i);\r\n        render_updates.add(i);\r\n        // updates[i] = true;\r\n\r\n        for (let off of this.offsets) {\r\n            const xn = pos_mod(x+off[0], grid.shape[0]);\r\n            const yn = pos_mod(y+off[1], grid.shape[1]);\r\n            const zn = pos_mod(z+off[2], grid.shape[2]); \r\n\r\n            i = grid.xyz_to_i(xn, yn, zn);\r\n            updates.add(i);\r\n            render_updates.add(i);\r\n            // updates[i] = true;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction pos_mod(n, m) {\r\n    return (((n % m) + m) % m);\r\n}\r\n\r\nconst Moore = new MooreNeighbour();\r\nconst VN = new VonNeumanNeighbour();\r\n\r\nexport class Neighbour {\r\n    static Create(neighbour) {\r\n        let type = neighbour.type;\r\n        switch (type) {\r\n            case 'M':\r\n                return Moore;\r\n            case 'VN':\r\n                return VN;\r\n            default:\r\n                throw new Error(`Unknown neighbour type: ${type}`);\r\n        }\r\n    }\r\n}\r\n","import { Neighbour } from './Neighbours3D';\r\n\r\nexport class Rule3D {\r\n    static Create(remain, become, total_states, neighbour) {\r\n        neighbour = Neighbour.Create(neighbour);\r\n        return new Rule3D(remain, become, total_states, neighbour);\r\n    }\r\n\r\n    constructor(remain_alive, become_alive, total_states, neighbours) {\r\n        this.remain_alive = remain_alive;\r\n        this.become_alive = become_alive;\r\n        this.total_states = total_states;\r\n\r\n        this.alive_state = 255;\r\n        this.dead_state = 0;\r\n\r\n        this.neighbours = neighbours;\r\n\r\n        let delta = (this.alive_state-this.dead_state)/(this.total_states-1);\r\n\r\n        this.alive_threshold = Math.floor(this.alive_state-delta/2.0);\r\n        this.dead_threshold = Math.floor(delta/2.0);\r\n        this.delta = Math.floor(delta);\r\n    }\r\n\r\n    count_neighbours(x, y, z, grid) {\r\n        return this.neighbours.count_neighbours(x, y, z, grid, this);\r\n    }\r\n\r\n    on_location_update(x, y, z, grid, updates) {\r\n        this.neighbours.on_location_update(x, y, z, grid, updates);\r\n    }\r\n\r\n    get_next_state(state, neighbours) {\r\n        // alive to dead\r\n        if (this.is_alive(state)) {\r\n            if (!this.remain_alive[neighbours]) {\r\n                return state-this.delta;\r\n            } else {\r\n                return state;\r\n            }\r\n        }\r\n        // dead to alive\r\n        if (this.is_dead(state)) {\r\n            if (this.become_alive[neighbours]) {\r\n                return this.alive_state;\r\n            } else {\r\n                return state;\r\n            }\r\n        }\r\n        // refractory\r\n        return state-this.delta;\r\n    }\r\n\r\n    is_neighbour(state) {\r\n        return (state === this.alive_state);\r\n    }\r\n\r\n    is_alive(state) {\r\n        return (state > this.alive_threshold);\r\n    }\r\n\r\n    is_dead(state) {\r\n        return (state < this.dead_threshold);\r\n    }\r\n}","import { Engine } from \"./Engine\";\r\n\r\nconst engine = new Engine();\r\nengine.attach_listener((data) => {\r\n    postMessage({action:'stats', data});\r\n});\r\nengine.run();\r\n\r\nonmessage = (ev) => {\r\n    let msg = ev.data;\r\n    let action = msg.action;\r\n    let id = msg.id;\r\n    try {\r\n        switch (action) {\r\n            case 'set_size':        return engine.set_shape(msg.data);\r\n            case 'set_rule':        return engine.set_rule(msg.data); \r\n            case 'set_randomiser':  return engine.set_randomiser(msg.data); \r\n            case 'clear':           return engine.clear(); \r\n            case 'randomise':       return engine.randomise(); \r\n            case 'step':            return engine.step(); \r\n            case 'start':           return engine.start(); \r\n            case 'stop':            return engine.stop(); \r\n            case 'request_frame':   return send_grid();\r\n            case 'set_grid':        return engine.set_grid(msg.data);\r\n            default:\r\n                break;\r\n        }\r\n    } catch (ex) {\r\n        postMessage({error: ex, action, id});\r\n    }\r\n}\r\n\r\nfunction send_grid() {\r\n    let res = engine.get_frame();\r\n    if (!res) return;\r\n    let {grid, local} = res;\r\n    postMessage({action:'grid', grid, local}, grid.transferables);\r\n}\r\n\r\n","import { Grid3D } from './Grid3D';\r\nimport { Randomiser } from './Randomiser3D';\r\nimport { Rule3D } from './Rule3D';\r\n\r\n// state machine\r\nexport class Engine {\r\n    constructor() {\r\n        this.listeners = new Set();\r\n        this.total_steps = 0;\r\n        this.running = false;\r\n        this.requested_step = false;\r\n\r\n        this.completed_frame = false;\r\n        this.grid_available = true;\r\n        this.local_rerender = false;\r\n\r\n        this.tasks = {\r\n            clear:     {callback: () => this.clear(), queued: false},\r\n            randomise: {callback: () => this.randomise(), queued: false},\r\n        }\r\n    }\r\n\r\n    attach_listener(listener) {\r\n        return this.listeners.add(listener);\r\n    }\r\n\r\n    remove_listener(listener) {\r\n        return this.listeners.delete(listener);\r\n    }\r\n\r\n    notify(data) {\r\n        for (let listener of this.listeners) {\r\n            listener(data);\r\n        }\r\n    }\r\n\r\n    get_frame() {\r\n        if (!this.grid) {\r\n            return undefined;\r\n        }\r\n        if (!this.completed_frame) {\r\n            return undefined;\r\n        }\r\n\r\n        this.completed_frame = false;\r\n        this.grid_available = false;\r\n\r\n        let local = this.local_rerender;\r\n        this.local_rerender = true;\r\n\r\n        return {grid:this.grid, local};\r\n    }\r\n\r\n    start() {\r\n        this.running = true;\r\n    }\r\n\r\n    stop() {\r\n        this.running = false;\r\n    }\r\n\r\n    run() {\r\n        this.loop();\r\n    }\r\n\r\n    loop() {\r\n        const dt = 15;\r\n\r\n        for (let key in this.tasks) {\r\n            let task = this.tasks[key];\r\n            if (task.queued) task.callback();\r\n        }\r\n\r\n        if (this.grid_available && (this.running || this.requested_step)) {\r\n            this.calculate_frame();\r\n            this.requested_step = false;\r\n        }\r\n\r\n        setTimeout(() => this.loop(), dt);\r\n    }\r\n\r\n    step() {\r\n        this.requested_step = true;\r\n    }\r\n\r\n    set_shape(shape) {\r\n        this.grid = Grid3D.Create(shape);\r\n        this.total_steps = 0;\r\n        this.notify({total_steps: this.total_steps, total_blocks: 0, completed_blocks: 0, frame_time: 0});\r\n        this.completed_frame = true;\r\n        this.local_rerender = false;\r\n    }\r\n\r\n    set_grid(grid) {\r\n        this.grid = new Grid3D(grid);\r\n        this.grid_available = true;\r\n    }\r\n\r\n    set_rule(data) {\r\n        let {remain, become, total_states, neighbour} = data;\r\n        this.rule = Rule3D.Create(remain, become, total_states, neighbour);\r\n    }\r\n\r\n    set_randomiser(data) {\r\n        let {type, params} = data;\r\n        this.randomiser = Randomiser.Create(type, params);\r\n    }\r\n\r\n    clear() {\r\n        if (!this.grid || !this.grid_available) {\r\n            this.tasks.clear.queued = true;\r\n            return;\r\n        }\r\n        this.tasks.clear.queued = false;\r\n\r\n        let {cells, cells_buffer, neighbours, updates, updates_buffer, render_updates} = this.grid;\r\n        let count = this.grid.count;\r\n        cells.fill(0, 0, count);\r\n        cells_buffer.fill(0, 0, count);\r\n        neighbours.fill(0, 0, count);\r\n        updates.clear();\r\n        updates_buffer.clear();\r\n        render_updates.clear();\r\n\r\n        this.total_steps = 0;\r\n        this.notify({total_steps: this.total_steps, total_blocks: 0, completed_blocks: 0, frame_time: 0});\r\n        this.completed_frame = true;\r\n        this.local_rerender = false;\r\n    }\r\n\r\n    randomise() {\r\n        if (!this.randomiser) return;\r\n        if (!this.rule) return;\r\n        if (!this.grid || !this.grid_available) {\r\n            this.tasks.randomise.queued = true;\r\n            return;\r\n        };\r\n        this.tasks.randomise.queued = false;\r\n\r\n        this.randomiser.randomise(this.grid, this.rule);\r\n        let total_blocks = this.grid.updates.size;\r\n\r\n        this.notify({total_blocks, completed_blocks:0});\r\n        this.completed_frame = true;\r\n        this.local_rerender = this.local_rerender && true;\r\n    }\r\n\r\n    calculate_frame() {\r\n        let grid = this.grid;\r\n        let rule = this.rule;\r\n        if (!grid) return;\r\n        if (!rule) return;\r\n\r\n        this.grid_available = false;\r\n\r\n        let {cells, cells_buffer, neighbours, updates, updates_buffer, render_updates} = grid;\r\n\r\n        let total_blocks = updates.size;\r\n        let completed_blocks = 0;\r\n        this.notify({total_blocks, completed_blocks});\r\n\r\n        let remove_stack = [];\r\n        let start_dt = performance.now();\r\n\r\n        // let xyz = [0,0,0];\r\n        for (let i of updates) {\r\n            let [x, y, z] = grid.i_to_xyz(i);\r\n            // grid.i_to_xyz_inplace(i, xyz);\r\n            // let [x,y,z] = xyz;\r\n\r\n            let ncount = rule.count_neighbours(x, y, z, grid);\r\n            neighbours[i] = ncount;\r\n\r\n            let state = cells[i];\r\n            let next_state = rule.get_next_state(state, ncount);\r\n            cells_buffer[i] = next_state;\r\n\r\n            if (state === next_state) {\r\n                remove_stack.push(i);\r\n            } else {\r\n                rule.on_location_update(x, y, z, grid, updates_buffer);\r\n            }\r\n\r\n            completed_blocks += 1;\r\n            if (completed_blocks % 10000 === 0) {\r\n                this.notify({completed_blocks});\r\n            }\r\n        }\r\n\r\n        for (let i of remove_stack) {\r\n            updates.delete(i);\r\n        }\r\n\r\n        grid.swap_buffers();\r\n\r\n        this.total_steps += 1;\r\n        let end_dt = performance.now();\r\n        let frame_time = end_dt - start_dt;\r\n        this.notify({total_steps: this.total_steps, frame_time, completed_blocks, total_blocks});\r\n\r\n        this.completed_frame = true;\r\n        this.grid_available = true;\r\n        this.local_rerender = this.local_rerender && true;\r\n    }\r\n};"],"sourceRoot":""}